{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teama\\\\Desktop\\\\MedBio_24\\\\-Biomy\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Order from './pages/Order';\nimport ResultsPage from './pages/ResultsPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/order\",\n        component: Order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/results\",\n        component: ResultsPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n// import Navbar from './components/Navbar';\n// import Home from './pages/Home';\n// import Order from './pages/Order';\n// import ResultsPage from './pages/ResultsPage';\n// import Login from './pages/Login';\n// import Signup from './pages/SignUp';\n// import './App.css';\n\n// const App = () => {\n//   const [user, setUser] = useState(null);\n\n//   useEffect(() => {\n//     // Check if user is already logged in (e.g., from localStorage)\n//     const loggedInUser = localStorage.getItem('user');\n//     if (loggedInUser) {\n//       setUser(JSON.parse(loggedInUser));\n//     }\n//   }, []);\n\n//   const handleLogin = (user) => {\n//     setUser(user);\n//     localStorage.setItem('user', JSON.stringify(user));\n//   };\n\n//   const handleLogout = () => {\n//     setUser(null);\n//     localStorage.removeItem('user');\n//   };\n\n//   return (\n//     <Router>\n//       <Navbar user={user} handleLogout={handleLogout} />\n//       <Switch>\n//         <Route path=\"/login\">\n//           {user ? <Redirect to=\"/\" /> : <Login setUser={handleLogin} />}\n//         </Route>\n//         <Route path=\"/signup\">\n//           {user ? <Redirect to=\"/\" /> : <Signup setUser={handleLogin} />}\n//         </Route>\n//         <Route path=\"/\">\n//           {user ? (\n//             <>\n//               <Route path=\"/\" exact component={Home} />\n//               <Route path=\"/order\" component={Order} />\n//               <Route path=\"/results\" component={ResultsPage} />\n//             </>\n//           ) : (\n//             <Redirect to=\"/login\" />\n//           )}\n//         </Route>\n//       </Switch>\n//     </Router>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","Navbar","Home","Order","ResultsPage","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","component","_c","$RefreshReg$"],"sources":["C:/Users/teama/Desktop/MedBio_24/-Biomy/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Order from './pages/Order';\r\nimport ResultsPage from './pages/ResultsPage';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/order\" component={Order} />\r\n        <Route path=\"/results\" component={ResultsPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n// import Navbar from './components/Navbar';\r\n// import Home from './pages/Home';\r\n// import Order from './pages/Order';\r\n// import ResultsPage from './pages/ResultsPage';\r\n// import Login from './pages/Login';\r\n// import Signup from './pages/SignUp';\r\n// import './App.css';\r\n\r\n// const App = () => {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Check if user is already logged in (e.g., from localStorage)\r\n//     const loggedInUser = localStorage.getItem('user');\r\n//     if (loggedInUser) {\r\n//       setUser(JSON.parse(loggedInUser));\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleLogin = (user) => {\r\n//     setUser(user);\r\n//     localStorage.setItem('user', JSON.stringify(user));\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     setUser(null);\r\n//     localStorage.removeItem('user');\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <Navbar user={user} handleLogout={handleLogout} />\r\n//       <Switch>\r\n//         <Route path=\"/login\">\r\n//           {user ? <Redirect to=\"/\" /> : <Login setUser={handleLogin} />}\r\n//         </Route>\r\n//         <Route path=\"/signup\">\r\n//           {user ? <Redirect to=\"/\" /> : <Signup setUser={handleLogin} />}\r\n//         </Route>\r\n//         <Route path=\"/\">\r\n//           {user ? (\r\n//             <>\r\n//               <Route path=\"/\" exact component={Home} />\r\n//               <Route path=\"/order\" component={Order} />\r\n//               <Route path=\"/results\" component={ResultsPage} />\r\n//             </>\r\n//           ) : (\r\n//             <Redirect to=\"/login\" />\r\n//           )}\r\n//         </Route>\r\n//       </Switch>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACR,MAAM;IAAAU,QAAA,gBACLF,OAAA,CAACL,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVN,OAAA,CAACN,MAAM;MAAAQ,QAAA,gBACLF,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,GAAG;QAACC,KAAK;QAACC,SAAS,EAAEb;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,QAAQ;QAACE,SAAS,EAAEZ;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,UAAU;QAACE,SAAS,EAAEX;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACI,EAAA,GAXIT,GAAG;AAaT,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}